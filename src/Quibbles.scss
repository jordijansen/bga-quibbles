/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * Crypt implementation : © Jordi Jansen <thestartplayer@gmail.com>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * crypt.css
 *
 * Crypt stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (crypt_crypt.tpl), and to HTML elements you create dynamically
    (in crypt.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
    Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

    .white_token {
        background-image: url('img/tokens.png');
        background-position: 0px 0px;
    }
    .black_token {
        background-image: url('img/tokens.png');
        background-position: -20px 0px;
    }
    .token {
        width: 20px;
        height: 20px;
        background-repeat: none;
    }
*/
@use 'sass:math';
@import '../node_modules/bga-cards/bga-cards';

$card-width: 165px;
$card-height: 257px;

$quibbles-color-roze: #ece1ec;
$quibbles-color-purple: #7d347f;

@mixin selectable {
    &.bga-cards_selectable-card {
        .card-side {
            outline: 4px rgba(80, 200, 255, 0.75) solid;
            cursor: pointer;
        }
    }
}

@mixin selected {
    &.bga-cards_selected-card {
        .card-side {
            outline: 4px rgba(124, 252, 0, 0.75) solid !important;
            cursor: pointer;
        }

    }
}

@mixin to-discard {
    &.to-discard {
        .card-side {
            filter: contrast(0.6);

            &::before {
                display: inline-block;
                width: 60px;
                height: 84px;
                margin-left: calc(($card-width / 2) - 30px);
                margin-top: calc(($card-height / 2) - 42px);
                content: "";
                background: url("img/recycle-bin-icon.png") no-repeat 0 0;
                background-size: 100%;
            }
        }
    }
}

@mixin quibbles-card-sprites($number, $max) {
    .front[data-number="#{$number}"] {
        background-image: url("img/cards_#{$number}.png");

        @for $i from 1 through $max {
            &[data-variation="#{$i}"] {
                background-position: #{(math.div(100%, ($max - 1))*($i - 1))} 0;
            }
        }
    }

}

html, .mode_3d #game_play_area_background {
    background: $quibbles-color-roze;
    .whiteblock {
        border-radius: 10px;
    }
}

.player-hand-card {
    display: inline-block;
    width: 32px;
    height: 32px;
    background-image: url('img/hand-cards-icon.svg');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    vertical-align: middle;
}

.quibbles-card {
    display: inline-block;
    position: relative;
    width: $card-width;
    height: $card-height;
    border-radius: 12px;

    @include selectable();
    @include selected();
    @include to-discard();

    .card-sides {
        .card-side {
            border-radius: 12px;

            &>* {
                pointer-events: none;
                user-select: none;
            }

            &.back {
                background-image: url("img/back.png");
                background-position: 0 0;
            }

            &.front, &.back {
                background-size: cover;
            }
        }
    }

    @include quibbles-card-sprites(1, 16);
    @include quibbles-card-sprites(2, 18);
    @include quibbles-card-sprites(3, 20);
    @include quibbles-card-sprites(4, 22);
    @include quibbles-card-sprites(5, 24);
    @include quibbles-card-sprites(6, 26);
}

.quibbles {
    .quibbles-title-wrapper {
        display: flex;
        justify-content: center;

        .quibbles-title {
            font-size: 18px;
            padding: 10px;
            display: inline-block;
            border-radius: 5px;
            color: white;
            text-align: center;
            text-transform: uppercase;
        }
    }

    .quibbles-counter {
        --bga-cards-deck-counter-size: 40px;
        color: white;
        text-align: center;
        border-radius: 25px;
        background: black;
        opacity: 0.8;
    }

    .quibbles-ui-row {
        display: flex;
        gap: 20px;
    }

    #quibbles-ui-row-1 {
        #logo-container {
            flex-grow: 1;
            display: flex;
            justify-content: center;
            align-items: center;

            img {
                max-width: 100%;
                height: auto;
            }
        }

        #card-deck, #card-discard {
            width: $card-width;
        }
    }

    #quibbles-ui-row-2 {
        .whiteblock {
            width: 100%;
            background-color: $quibbles-color-purple;
        }
        #card-display {
            height: $card-height;
        }
    }

    #quibbles-ui-row-3 {
        .whiteblock {
            width: 100%;
        }
        #player-hand {
            height: $card-height;
        }
    }

    #quibbles-ui-row-4 {
        flex-wrap: wrap;
        justify-content: center;

        .player-area {
            width: calc(50% - 30px);
            .player-collection {
                height: $card-height;
            }
        }
    }
}