/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * Crypt implementation : © Jordi Jansen <thestartplayer@gmail.com>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * crypt.css
 *
 * Crypt stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (crypt_crypt.tpl), and to HTML elements you create dynamically
    (in crypt.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
    Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

    .white_token {
        background-image: url('img/tokens.png');
        background-position: 0px 0px;
    }
    .black_token {
        background-image: url('img/tokens.png');
        background-position: -20px 0px;
    }
    .token {
        width: 20px;
        height: 20px;
        background-repeat: none;
    }
*/
@import "bga-cards/scss/_cards.scss";

$card-width: 165px;
$card-height: 257px;

@mixin selectable {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 1);
    animation: crypt-pulse 2s infinite;
    outline: 4px rgba(80, 200, 255, 0.75) solid;
    cursor: pointer;
}

@mixin selected {
    outline: 4px rgba(124, 252, 0, 0.75) solid !important;
    cursor: pointer;
}

@mixin invalid {
    outline: 4px rgba(255, 0, 0, 0.75) solid !important;
}

@mixin quibbles-card-sprites($type, $max) {
    @for $i from 1 through $max {
        &.quibbles-card-#{$type}-#{$i} {
            .bga-card-front {
                height: $card-height;
                width: $card-width;
                background-position: #{(100%/($max - 1)*($i - 1))} 0;
                background-image: url("img/cards_#{$type}.png");
            }
            .bga-card-front {
                height: $card-height;
                width: $card-width;
            }
        }
    }
}

.quibbles {
    .quibbles-card {
        height: $card-height;
        width: $card-width;

        .bga-card-inner {
            border-radius: 12px;
        }

        .bga-card-front, .bga-card-back {
            height: $card-height;
            width: $card-width;
            border-radius: 12px;
        }

        @include quibbles-card-sprites(1, 16);
        @include quibbles-card-sprites(2, 18);
        @include quibbles-card-sprites(3, 20);
        @include quibbles-card-sprites(4, 22);
        @include quibbles-card-sprites(5, 24);
        @include quibbles-card-sprites(6, 26);
    }

    .deck {
        height: $card-height;
        width: $card-width;
    }

    .row-1, .row-2, .row-3 {
        display: flex;
        gap: 20px;
    }

    .row-1 {
        #player-area-top {
            background-color: blue;
            flex-grow: 1;
        }

        #card-deck, #card-discard {
            background-color: red;
            width: $card-width;
        }
    }

    .row-2 {
        #card-display {
            background-color: greenyellow;
            flex-grow: 1;
        }

        #player-area-left, #player-area-right {
            background-color: blue;
            width: $card-width;
        }
    }

    .row-3 {
        #player-area-bottom {
            background-color: blue;
            flex-grow: 1;
        }

        .spacer {
            background-color: red;
            width: $card-width;
        }
    }
}